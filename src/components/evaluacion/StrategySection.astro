---
// Strategy Section Component - Hierarchical business planning form
---

<section class="strategy-section">
  <div class="container">
    <h2 class="strategy-title">ESTRATEGIA</h2>
    <p class="strategy-description">
      Define tu estrategia de negocio de forma estructurada, desde la meta general hasta los objetivos específicos de cada equipo.
    </p>
    
    <div class="strategy-form">
      <!-- Company Goal Section -->
      <div class="card company-goal-box" id="company-goal">
        <h3 class="level-title">Meta Crecimiento Empresa</h3>
        <div class="form-group">
          <label class="form-label">Indicador:</label>
          <select class="form-select" id="company-indicator">
            <option value="">Seleccionar indicador</option>
            <option value="ingresos">Ingresos</option>
            <option value="margen">Margen</option>
            <option value="ebitda">EBITDA</option>
          </select>
        </div>
        <div class="form-group">
          <label class="form-label">Meta Anual:</label>
          <input type="text" class="form-input" id="company-target" placeholder="Ej: $1,000,000">
        </div>
      </div>

      <!-- Business Lines Row -->
      <div class="business-lines-row" id="business-lines-row">
        <!-- Default business line boxes -->
        <div class="card business-line-item default-item" data-default="1">
          <div class="form-group">
            <label class="form-label">Nombre línea de negocio:</label>
            <input type="text" class="form-input" name="business-line-1" placeholder="Ej: E-commerce, Retail, B2B">
          </div>
          <div class="form-group">
            <label class="form-label">Indicador:</label>
            <select class="form-select" name="business-line-1-indicator">
              <option value="">Seleccionar indicador</option>
              <option value="ingresos">Ingresos</option>
              <option value="margen">Margen</option>
              <option value="ebitda">EBITDA</option>
            </select>
          </div>
          <div class="form-group">
            <label class="form-label">Meta Anual:</label>
            <input type="text" class="form-input" name="business-line-1-target" placeholder="Ej: $500,000">
          </div>
        </div>
        
        <div class="card business-line-item default-item" data-default="2">
          <div class="form-group">
            <label class="form-label">Nombre línea de negocio:</label>
            <input type="text" class="form-input" name="business-line-2" placeholder="Ej: E-commerce, Retail, B2B">
          </div>
          <div class="form-group">
            <label class="form-label">Indicador:</label>
            <select class="form-select" name="business-line-2-indicator">
              <option value="">Seleccionar indicador</option>
              <option value="ingresos">Ingresos</option>
              <option value="margen">Margen</option>
              <option value="ebitda">EBITDA</option>
            </select>
          </div>
          <div class="form-group">
            <label class="form-label">Meta Anual:</label>
            <input type="text" class="form-input" name="business-line-2-target" placeholder="Ej: $500,000">
          </div>
        </div>
        
        <button type="button" class="card add-button" id="add-business-line">
          <span class="add-icon">+</span>
          Agregar línea de negocio
        </button>
      </div>

      <!-- Company OKRs Row -->
      <div class="company-okrs-row" id="company-okrs-row">
        <!-- Default OKR boxes -->
        <div class="card company-okr-item default-item" data-default="1">
          <div class="form-group">
            <label class="form-label">Objetivo:</label>
            <input type="text" class="form-input" name="company-okr-1-objective" placeholder="Ej: Incrementar ventas online">
          </div>
          <div class="form-group">
            <label class="form-label">Indicador:</label>
            <input type="text" class="form-input" name="company-okr-1-indicator" placeholder="Ej: Número de transacciones">
          </div>
          <div class="form-group">
            <label class="form-label">Meta Anual:</label>
            <input type="text" class="form-input" name="company-okr-1-target" placeholder="Ej: 10,000 transacciones">
          </div>
          <div class="form-group">
            <label class="form-label">Principal meta de negocio a impactar:</label>
            <select class="form-select" name="company-okr-1-business-impact">
              <option value="">Seleccionar línea de negocio</option>
            </select>
          </div>
        </div>
        
        <div class="card company-okr-item default-item" data-default="2">
          <div class="form-group">
            <label class="form-label">Objetivo:</label>
            <input type="text" class="form-input" name="company-okr-2-objective" placeholder="Ej: Incrementar ventas online">
          </div>
          <div class="form-group">
            <label class="form-label">Indicador:</label>
            <input type="text" class="form-input" name="company-okr-2-indicator" placeholder="Ej: Número de transacciones">
          </div>
          <div class="form-group">
            <label class="form-label">Meta Anual:</label>
            <input type="text" class="form-input" name="company-okr-2-target" placeholder="Ej: 10,000 transacciones">
          </div>
          <div class="form-group">
            <label class="form-label">Principal meta de negocio a impactar:</label>
            <select class="form-select" name="company-okr-2-business-impact">
              <option value="">Seleccionar línea de negocio</option>
            </select>
          </div>
        </div>

        <button type="button" class="card add-button" id="add-company-okr">
          <span class="add-icon">+</span>
          Agregar OKR
        </button>
      </div>

      <!-- Submit Button -->
      <div class="strategy-actions">
        <button type="button" class="strategy-submit-btn" id="save-strategy">
          Guardar Estrategia
        </button>
      </div>
    </div>
  </div>
</section>

<style>
  .strategy-section {
    padding: 5rem 0;
    background-color: #ffffff;
    position: relative;
  }

  .container {
    max-width: 80%;
    margin: 0 auto;
    padding: 0 2rem;
  }

  @media (min-width: 1400px) {
    .container {
      max-width: 70%;
    }
  }

  .strategy-title {
    font-size: clamp(2.5rem, 4vw, 3.5rem);
    font-weight: 900;
    text-align: center;
    margin-bottom: 1rem;
    color: #000000;
    letter-spacing: -0.08em;
    line-height: 1.1;
    text-transform: uppercase;
  }

  .strategy-description {
    text-align: center;
    max-width: 700px;
    margin: 0 auto 3rem;
    font-size: clamp(1rem, 2vw, 1.3rem);
    font-weight: 300;
    line-height: 1.4;
    color: #000000;
    letter-spacing: 0.02em;
  }

  .strategy-form {
    max-width: 1000px;
    margin: 0 auto;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;
  }

  /* Common Card Styles */
  .card {
    background: #ffffff;
    border: 1px solid #666666;
    border-radius: 8px;
    padding: 1.5rem;
    width: 300px;
    min-height: 200px;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .company-goal-box .level-title {
    font-size: 1.2rem;
    font-weight: 700;
    color: #000000;
    margin-bottom: 1.5rem;
    text-align: center;
  }

  /* Business Lines Row */
  .business-lines-row {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
    position: relative;
  }




  /* Company OKRs Row */
  .company-okrs-row {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
    position: relative;
  }

  .level-title {
    font-size: 1.2rem;
    font-weight: 700;
    color: #000000;
    margin-bottom: 1rem;
    text-align: left;
  }

  .add-button {
    font-size: 0.9rem;
    font-weight: 400;
    cursor: pointer;
    transition: all 0.3s ease;
    align-items: center;
    gap: 0.5rem;
    justify-content: center;
  }

  .add-button:hover {
    background-color: #f8f9fa;
    border-color: #000000;
  }

  .add-icon {
    font-size: 2rem;
    font-weight: 700;
    color: #000000;
  }

  .form-group {
    margin-bottom: 1rem;
  }

  .form-label {
    display: block;
    font-size: 0.9rem;
    font-weight: 400;
    color: #000000;
    margin-bottom: 0.25rem;
  }

  .form-input,
  .form-select {
    width: 100%;
    padding: 0.5rem 0;
    border: none;
    border-bottom: 1px solid #000000;
    font-size: 1rem;
    font-family: inherit;
    transition: all 0.3s ease;
    background-color: transparent;
  }

  .form-input:focus,
  .form-select:focus {
    outline: none;
    border-bottom-color: #ef1d27;
  }

  .form-input::placeholder {
    color: #999999;
  }



  .remove-button {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    background-color: #ffffff;
    color: #666666;
    border: 1px solid #666666;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    cursor: pointer;
    font-size: 0.8rem;
    font-weight: 700;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .remove-button:hover {
    background-color: #f8f9fa;
    color: #000000;
    border-color: #000000;
  }

  .strategy-actions {
    text-align: center;
    margin-top: 3rem;
  }

  .strategy-submit-btn {
    background-color: #ef1d27;
    color: #ffffff;
    border: 2px solid #000000;
    padding: 1rem 2rem;
    font-size: 1rem;
    font-weight: 600;
    font-family: inherit;
    cursor: pointer;
    transition: all 0.3s ease;
    border-radius: 8px;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .strategy-submit-btn:hover {
    background-color: #ffffff;
    color: #ef1d27;
    border-color: #ef1d27;
  }

  /* Responsive Design */
  @media (min-width: 1400px) {
    .strategy-title {
      font-size: 3.5rem;
      margin-bottom: 1.5rem;
    }
    
    .strategy-description {
      font-size: 1.3rem;
      max-width: 700px;
    }
  }

  @media (max-width: 1399px) and (min-width: 1024px) {
    .strategy-title {
      font-size: clamp(2rem, 3vw, 3rem);
      margin-bottom: 1.5rem;
    }
    
    .strategy-description {
      font-size: clamp(0.9rem, 1.8vw, 1.1rem);
      max-width: 600px;
    }

    .strategy-form {
      gap: 2.5rem;
    }

    .business-lines-row,
    .company-okrs-row {
      gap: 0.75rem;
    }

    .card {
      width: 280px;
      min-height: 200px;
    }
  }

  @media (max-width: 1023px) and (min-width: 768px) {
    .strategy-title {
      font-size: clamp(1.75rem, 3.5vw, 2.5rem);
      margin-bottom: 1rem;
    }
    
    .strategy-description {
      font-size: clamp(0.8rem, 2vw, 1rem);
      max-width: 500px;
    }

    .strategy-form {
      gap: 2rem;
    }

    .business-lines-row,
    .company-okrs-row {
      flex-wrap: wrap;
      gap: 1rem;
      justify-content: center;
    }

    .card {
      width: 250px;
      min-height: 200px;
    }
  }

  @media (max-width: 767px) and (min-width: 481px) {
    .strategy-title {
      font-size: clamp(1.5rem, 4vw, 2rem);
      margin-bottom: 1rem;
    }
    
    .strategy-description {
      font-size: clamp(0.7rem, 2.5vw, 0.9rem);
      max-width: 450px;
    }

    .strategy-form {
      gap: 1.5rem;
    }

    .business-lines-row,
    .company-okrs-row {
      flex-direction: column;
      gap: 1rem;
      align-items: center;
    }

    .card {
      width: 100%;
      max-width: 400px;
      min-height: 180px;
    }

    .form-group {
      margin-bottom: 0.75rem;
    }

    .form-label {
      font-size: 0.85rem;
    }

    .form-input,
    .form-select {
      font-size: 0.9rem;
    }
  }

  @media (max-width: 480px) {
    .strategy-section {
      padding: 3rem 0;
    }
    
    .container {
      padding: 0 1rem;
    }
    
    .strategy-title {
      font-size: clamp(1.25rem, 4.5vw, 1.75rem);
      margin-bottom: 0.75rem;
    }
    
    .strategy-description {
      font-size: clamp(0.6rem, 3vw, 0.8rem);
      max-width: 100%;
      margin-bottom: 1.5rem;
    }

    .strategy-form {
      gap: 1.25rem;
    }

    .business-lines-row,
    .company-okrs-row {
      flex-direction: column;
      gap: 0.75rem;
      align-items: center;
    }

    .card {
      width: 100%;
      padding: 1rem;
      min-height: 160px;
    }

    .level-title {
      font-size: 1.1rem;
      margin-bottom: 0.75rem;
    }

    .form-group {
      margin-bottom: 0.5rem;
    }

    .form-label {
      font-size: 0.8rem;
      margin-bottom: 0.2rem;
    }

    .form-input,
    .form-select {
      font-size: 0.85rem;
      padding: 0.4rem 0;
    }

    .add-button {
      font-size: 0.8rem;
    }

    .add-icon {
      font-size: 1.5rem;
    }

    .strategy-submit-btn {
      padding: 0.75rem 1.5rem;
      font-size: 0.9rem;
    }

    .remove-button {
      width: 20px;
      height: 20px;
      font-size: 0.7rem;
    }
  }
</style>

<script>
  class StrategyFormController {
    private businessLineCounter: number = 0;
    private companyOkrCounter: number = 0;
    private businessLines: string[] = [];

    constructor() {
      this.init();
    }

    private init(): void {
      this.setupEventListeners();
      this.updateBusinessLinesList();
    }

    private setupEventListeners(): void {
      // Add business line button
      const addBusinessLineBtn = document.getElementById('add-business-line');
      if (addBusinessLineBtn) {
        addBusinessLineBtn.addEventListener('click', () => this.addBusinessLine());
      }

      // Add company OKR button
      const addCompanyOkrBtn = document.getElementById('add-company-okr');
      if (addCompanyOkrBtn) {
        addCompanyOkrBtn.addEventListener('click', () => this.addCompanyOkr());
      }

      // Save strategy button
      const saveStrategyBtn = document.getElementById('save-strategy');
      if (saveStrategyBtn) {
        saveStrategyBtn.addEventListener('click', () => this.saveStrategy());
      }
    }

    private addBusinessLine(): void {
      this.businessLineCounter++;
      const container = document.getElementById('business-lines-row');
      if (!container) return;

      const businessLineId = `business-line-${this.businessLineCounter}`;
      const businessLineName = `business-line-${this.businessLineCounter}`;
      
      const businessLineHtml = `
        <div class="card business-line-item" id="${businessLineId}">
          <button type="button" class="remove-button" onclick="strategyController.removeBusinessLine('${businessLineId}')">×</button>
          <div class="form-group">
            <label class="form-label">Nombre línea de negocio:</label>
            <input type="text" class="form-input" name="${businessLineName}" placeholder="Ej: E-commerce, Retail, B2B">
          </div>
          <div class="form-group">
            <label class="form-label">Indicador:</label>
            <select class="form-select" name="${businessLineName}-indicator">
              <option value="">Seleccionar indicador</option>
              <option value="ingresos">Ingresos</option>
              <option value="margen">Margen</option>
              <option value="ebitda">EBITDA</option>
            </select>
          </div>
          <div class="form-group">
            <label class="form-label">Meta Anual:</label>
            <input type="text" class="form-input" name="${businessLineName}-target" placeholder="Ej: $500,000">
          </div>
        </div>
      `;

      // Insert before the add button (which is always the last child)
      const addButton = container.querySelector('.add-button');
      if (addButton) {
        addButton.insertAdjacentHTML('beforebegin', businessLineHtml);
      } else {
      container.insertAdjacentHTML('beforeend', businessLineHtml);
      }
      
      this.updateBusinessLinesList();
    }

    private addCompanyOkr(): void {
      this.companyOkrCounter++;
      const container = document.getElementById('company-okrs-row');
      if (!container) return;

      const okrId = `company-okr-${this.companyOkrCounter}`;
      const okrName = `company-okr-${this.companyOkrCounter}`;
      
      const okrHtml = `
        <div class="card company-okr-item" id="${okrId}">
          <button type="button" class="remove-button" onclick="strategyController.removeCompanyOkr('${okrId}')">×</button>
          <div class="form-group">
            <label class="form-label">Objetivo:</label>
            <input type="text" class="form-input" name="${okrName}-objective" placeholder="Ej: Incrementar ventas online">
          </div>
          <div class="form-group">
            <label class="form-label">Indicador:</label>
            <input type="text" class="form-input" name="${okrName}-indicator" placeholder="Ej: Número de transacciones">
          </div>
          <div class="form-group">
            <label class="form-label">Meta Anual:</label>
            <input type="text" class="form-input" name="${okrName}-target" placeholder="Ej: 10,000 transacciones">
          </div>
          <div class="form-group">
            <label class="form-label">Principal meta de negocio a impactar:</label>
            <select class="form-select" name="${okrName}-business-impact">
              <option value="">Seleccionar línea de negocio</option>
              ${this.businessLines.map(line => `<option value="${line}">${line}</option>`).join('')}
            </select>
          </div>
        </div>
      `;

      // Insert before the add button (which is always the last child)
      const addButton = container.querySelector('.add-button');
      if (addButton) {
        addButton.insertAdjacentHTML('beforebegin', okrHtml);
      } else {
        container.insertAdjacentHTML('beforeend', okrHtml);
      }
    }

    private removeBusinessLine(id: string): void {
      const element = document.getElementById(id);
      if (element) {
        element.remove();
        this.updateBusinessLinesList();
      }
    }

    private removeCompanyOkr(id: string): void {
      const element = document.getElementById(id);
      if (element) {
        element.remove();
      }
    }

    private updateBusinessLinesList(): void {
      this.businessLines = [];
      const businessLineInputs = document.querySelectorAll('input[name^="business-line-"][name$=""]');
      
      businessLineInputs.forEach((input) => {
        const inputElement = input as HTMLInputElement;
        if (inputElement.value.trim()) {
          this.businessLines.push(inputElement.value.trim());
        }
      });

      // Update all business impact selects
      const businessImpactSelects = document.querySelectorAll('select[name$="-business-impact"]');
      businessImpactSelects.forEach((select) => {
        const selectElement = select as HTMLSelectElement;
        const currentValue = selectElement.value;
        selectElement.innerHTML = '<option value="">Seleccionar línea de negocio</option>' +
          this.businessLines.map(line => `<option value="${line}">${line}</option>`).join('');
        
        // Restore previous selection if it still exists
        if (this.businessLines.includes(currentValue)) {
          selectElement.value = currentValue;
        }
      });
    }

    private saveStrategy(): void {
      const strategyData = {
        companyGoal: {
          indicator: (document.getElementById('company-indicator') as HTMLSelectElement)?.value,
          target: (document.getElementById('company-target') as HTMLInputElement)?.value
        },
        businessLines: this.collectBusinessLines(),
        companyOkrs: this.collectCompanyOkrs()
      };

      console.log('Strategy Data:', strategyData);
      
      // Here you would typically send the data to your backend
      alert('Estrategia guardada exitosamente!');
    }

    private collectBusinessLines(): any[] {
      const businessLines: any[] = [];
      const businessLineItems = document.querySelectorAll('.business-line-item');
      
      businessLineItems.forEach((item: Element) => {
        const nameInput = item.querySelector('input[name^="business-line-"][name$=""]') as HTMLInputElement;
        const indicatorSelect = item.querySelector('select[name$="-indicator"]') as HTMLSelectElement;
        const targetInput = item.querySelector('input[name$="-target"]') as HTMLInputElement;
        
        if (nameInput && indicatorSelect && targetInput) {
          businessLines.push({
            name: nameInput.value,
            indicator: indicatorSelect.value,
            target: targetInput.value
          });
        }
      });
      
      return businessLines;
    }

    private collectCompanyOkrs(): any[] {
      const companyOkrs: any[] = [];
      const okrItems = document.querySelectorAll('.company-okr-item');
      
      okrItems.forEach((item: Element) => {
        const objectiveInput = item.querySelector('input[name$="-objective"]') as HTMLInputElement;
        const indicatorInput = item.querySelector('input[name$="-indicator"]') as HTMLInputElement;
        const targetInput = item.querySelector('input[name$="-target"]') as HTMLInputElement;
        const businessImpactSelect = item.querySelector('select[name$="-business-impact"]') as HTMLSelectElement;
        
        if (objectiveInput && indicatorInput && targetInput && businessImpactSelect) {
          companyOkrs.push({
            objective: objectiveInput.value,
            indicator: indicatorInput.value,
            target: targetInput.value,
            businessImpact: businessImpactSelect.value
          });
        }
      });
      
      return companyOkrs;
    }
  }

  // Initialize when DOM is ready
  let strategyController: StrategyFormController;
  
  document.addEventListener('DOMContentLoaded', function() {
    strategyController = new StrategyFormController();
  });
</script>
