---
// OKRs Component
---

<section class="form-section-group">
  <h2 class="section-title">OKRs Empresariales</h2>
  
  <div class="okrs-container" id="okrsContainer">
    <div class="okr-item" data-okr="1">
      <div class="okr-header">
        <h3 class="okr-title">OKR 1</h3>
        <button type="button" class="remove-okr-btn" data-action="remove-okr" data-okr="1" title="Eliminar OKR">×</button>
      </div>
      
      <div class="okr-content">
        <div class="form-group">
          <label for="okrObjective1">Objetivo</label>
          <input type="text" id="okrObjective1" name="okrObjective1" placeholder="Ej: Incrementar la satisfacción del cliente">
        </div>
        
        <div class="form-row">
          <div class="form-group">
            <label for="okrKeyResult1">Resultado Clave</label>
            <input type="text" id="okrKeyResult1" name="okrKeyResult1" placeholder="Ej: NPS > 8.5">
          </div>
          
          <div class="form-group">
            <label for="okrProgress1">Progreso Actual (%)</label>
            <input type="number" id="okrProgress1" name="okrProgress1" min="0" max="100" placeholder="Ej: 75">
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <div class="add-okr-container">
    <button type="button" class="add-okr-btn" data-action="add-okr">+ Agregar OKR</button>
  </div>
</section>

<style>
  .form-section-group {
    background: transparent;
    border: 1px solid #e5e5e5;
    border-radius: 8px;
    padding: 2.5rem;
    margin-bottom: 2rem;
  }

  .section-title {
    font-size: clamp(2.5rem, 5vw, 3.5rem);
    font-weight: 900;
    margin-bottom: 2rem;
    color: #000000;
    letter-spacing: -0.08em;
    line-height: 1.1;
    text-transform: uppercase;
  }

  .okr-item {
    background: transparent;
    border: 1px solid #e5e5e5;
    border-radius: 6px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .okr-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #e5e5e5;
  }

  .okr-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #000000;
    margin: 0;
  }

  .okr-content {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
  }

  .form-group {
    margin-bottom: 0;
  }

  .form-group label {
    display: block;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: #000000;
    font-size: 0.9rem;
  }

  .form-group input {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 1px solid #d1d5db;
    border-radius: 4px;
    font-size: 1rem;
    font-family: inherit;
    transition: border-color 0.2s ease;
    background: #ffffff;
  }

  .form-group input:focus {
    outline: none;
    border-color: #000000;
  }

  .form-group input::placeholder {
    color: #9ca3af;
  }

  .remove-okr-btn {
    background: #dc2626;
    color: #ffffff;
    border: none;
    border-radius: 50%;
    width: 28px;
    height: 28px;
    font-size: 1.125rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease;
  }

  .remove-okr-btn:hover {
    background: #b91c1c;
  }

  .add-okr-container {
    text-align: center;
    margin-top: 1.5rem;
  }

  .add-okr-btn {
    background: #000000;
    color: #ffffff;
    border: none;
    padding: 0.875rem 1.75rem;
    font-size: 1rem;
    font-weight: 500;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .add-okr-btn:hover {
    background: #333333;
  }

  /* Responsive Design */
  @media (min-width: 1400px) {
    .section-title {
      font-size: 3.5rem;
      margin-bottom: 2.5rem;
    }
  }

  @media (max-width: 1399px) and (min-width: 1024px) {
    .section-title {
      font-size: clamp(3rem, 4vw, 3.5rem);
      margin-bottom: 2.5rem;
    }
  }

  @media (max-width: 1023px) and (min-width: 768px) {
    .section-title {
      font-size: clamp(2.5rem, 4.5vw, 3rem);
      margin-bottom: 2rem;
    }
  }

  @media (max-width: 767px) and (min-width: 481px) {
    .section-title {
      font-size: clamp(2rem, 5vw, 2.5rem);
      margin-bottom: 2rem;
    }
  }

  @media (max-width: 768px) {
    .form-section-group {
      padding: 1.5rem;
    }
    
    .okr-item {
      padding: 1.5rem;
    }
    
    .form-row {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .okr-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.75rem;
    }
  }

  @media (max-width: 480px) {
    .form-section-group {
      padding: 1rem;
    }
    
    .okr-item {
      padding: 1rem;
    }
    
    .section-title {
      font-size: clamp(1.75rem, 6vw, 2.5rem);
      margin-bottom: 1.5rem;
    }
    
    .add-okr-btn {
      padding: 0.75rem 1.5rem;
      font-size: 0.875rem;
    }
  }
</style>

<script>
  class OKRsManager {
    private container: HTMLElement | null;
    private okrCounter: number = 1;
    private maxOKRs: number = 10;

    constructor() {
      this.container = document.getElementById('okrsContainer');
      this.init();
    }

    private init(): void {
      if (!this.container) return;
      
      // Event delegation for all buttons
      this.container.addEventListener('click', this.handleClick.bind(this));
      
      // Add OKR button
      const addOKRBtn = document.querySelector('[data-action="add-okr"]');
      if (addOKRBtn) {
        addOKRBtn.addEventListener('click', this.addOKR.bind(this));
      }
    }

    private handleClick(event: Event): void {
      const target = event.target as HTMLElement;
      const action = target.dataset.action;
      
      if (!action) return;

      if (action === 'remove-okr') {
        const okrNumber = parseInt(target.dataset.okr || '1');
        this.removeOKR(okrNumber);
      }
    }

    private addOKR(): void {
      if (this.okrCounter >= this.maxOKRs) {
        alert(`Máximo ${this.maxOKRs} OKRs permitidos`);
        return;
      }

      this.okrCounter++;
      
      if (!this.container) return;
      
      const newOKR = this.createOKRHTML(this.okrCounter);
      this.container.insertAdjacentHTML('beforeend', newOKR);
    }

    private removeOKR(okrNumber: number): void {
      if (okrNumber === 1) {
        alert('No se puede eliminar el primer OKR');
        return;
      }

      const okrElement = document.querySelector(`[data-okr="${okrNumber}"]`);
      if (okrElement) {
        okrElement.remove();
      }
    }

    private createOKRHTML(okrNumber: number): string {
      return `
        <div class="okr-item" data-okr="${okrNumber}">
          <div class="okr-header">
            <h3 class="okr-title">OKR ${okrNumber}</h3>
            <button type="button" class="remove-okr-btn" data-action="remove-okr" data-okr="${okrNumber}" title="Eliminar OKR">×</button>
          </div>
          
          <div class="okr-content">
            <div class="form-group">
              <label for="okrObjective${okrNumber}">Objetivo</label>
              <input type="text" id="okrObjective${okrNumber}" name="okrObjective${okrNumber}" placeholder="Ej: Incrementar la satisfacción del cliente">
            </div>
            
            <div class="form-row">
              <div class="form-group">
                <label for="okrKeyResult${okrNumber}">Resultado Clave</label>
                <input type="text" id="okrKeyResult${okrNumber}" name="okrKeyResult${okrNumber}" placeholder="Ej: NPS > 8.5">
              </div>
              
              <div class="form-group">
                <label for="okrProgress${okrNumber}">Progreso Actual (%)</label>
                <input type="number" id="okrProgress${okrNumber}" name="okrProgress${okrNumber}" min="0" max="100" placeholder="Ej: 75">
              </div>
            </div>
          </div>
        </div>
      `;
    }

    public reset(): void {
      this.okrCounter = 1;
      
      if (this.container) {
        const additionalOKRs = this.container.querySelectorAll('.okr-item:not(:first-child)');
        additionalOKRs.forEach(okr => okr.remove());
      }
    }

    public destroy(): void {
      if (this.container) {
        this.container.removeEventListener('click', this.handleClick.bind(this));
      }
      this.container = null;
    }
  }

  // Initialize when DOM is ready
  let okrsManager: OKRsManager;
  
  document.addEventListener('DOMContentLoaded', function() {
    okrsManager = new OKRsManager();
    
    // Register with FormStateManager if available
    if ((window as any).formStateManager) {
      (window as any).formStateManager.registerManager('okrs', okrsManager);
    }
  });

  // Expose reset function globally for form reset (backward compatibility)
  (window as any).resetOKRs = function(): void {
    if (okrsManager) {
      okrsManager.reset();
    }
  };
</script>
