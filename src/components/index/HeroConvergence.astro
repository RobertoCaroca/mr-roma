---
// Hero Convergence - Main hero section with title and convergence visualization
import Spheres from './Spheres.astro';
---

<section class="hero-convergence">
  <div class="container">
    <!-- Left Column: Title and Subtitle -->
    <div class="title-column">
      <div class="convergence-title" id="convergenceTitle">
        <h1 class="convergence-title-main">MR ROMA</h1>
        <p class="convergence-title-subtitle">ESTRATEGIA DE <span class="highlight-text">UX, PRODUCTO Y TECNOLOG√çA</span> ENFOCADA EN EL<span class="highlight-text">NEGOCIO</span>.</p>
      </div>
      </div>
      
    <!-- Right Column: Convergence Visualization -->
    <div class="visualization-column">
      <Spheres />
    </div>
  </div>
  
  <!-- Scroll Progress Bar -->
  <div class="scroll-progress" id="scrollProgress"></div>
</section>

<style>
  /* ===== HERO SECTION ===== */
  .hero-convergence {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    background: linear-gradient(160deg, #ef1d27 20%, #f26168 55%, #fff 55%);
    position: relative;
    overflow: hidden;
  }

  .container {
    max-width: 90%;
    margin: 0 auto;
    padding: 0 2rem;
  }

  /* Column styles - EQUAL HEIGHT */
  .title-column {
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }

  .visualization-column {
    display: flex;
    align-items: center;
    justify-content: center;
    padding-bottom: 5rem;
  }

  /* Desktop: Two-column layout */
  @media (min-width: 1024px) {
    .container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 4rem;
      align-items: stretch;
      padding-bottom: 5rem;
    }
  }

  /* ===== TITLE STYLES - SIMPLIFIED ===== */
  .convergence-title {
    max-width: 800px;
    text-align: left;
    padding-bottom: 5rem;
  }

  .convergence-title-main {
    font-size: clamp(10rem, 8vw, 7rem);
    font-weight: 900;
    color: transparent;
    -webkit-text-stroke: 2px #fff;
    margin-bottom: 1rem;
    letter-spacing: -0.05em;
    line-height: 0.9;
    text-transform: uppercase;
    text-align: left;
    text-shadow: 0 0 8px rgba(239, 29, 39, 0.7), 0 0 16px rgba(239, 29, 39, 0.9);
  }

  .convergence-title-subtitle {
    font-size: clamp(1rem, 2.5vw, 1.5rem);
    font-weight: 300;
    color: #fff;
    max-width: 750px;
    margin: 0;
    line-height: 1.4;
    letter-spacing: 0.02em;
    text-align: left;
  }

  .highlight-text {
    font-weight: 900;
  }


  /* ===== SCROLL PROGRESS ===== */
  .scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 0%;
    height: 3px;
    background: linear-gradient(90deg, #ef1d27, #f26168);
    z-index: 1000;
    transition: width 0.1s ease;
  }

</style>

<script>
  // Debounce utility function
  function debounce(func: Function, wait: number) {
    let timeout: NodeJS.Timeout;
    return function executedFunction(...args: any[]) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  document.addEventListener('DOMContentLoaded', () => {
    const scrollProgress = document.getElementById('scrollProgress') as HTMLElement;
    const spheresController = (window as any).spheresController;

    // Optimized scroll handler with debouncing
    const handleScroll = debounce(() => {
      const scrollY = window.scrollY;
      const windowHeight = document.documentElement.scrollHeight - window.innerHeight;
      const scrollPercent = (windowHeight > 0) ? (scrollY / windowHeight) * 100 : 0;
      
      // Update progress bar
      if (scrollProgress) {
        scrollProgress.style.width = scrollPercent + '%';
      }
      
      // Trigger sphere convergence
      if (spheresController) {
        if (scrollY > 50) {
          spheresController.startConvergence();
        } else {
          spheresController.revertToOrbit();
        }
      }
    }, 16); // ~60fps

    // Add scroll listener with passive option for better performance
    window.addEventListener('scroll', handleScroll, { passive: true });
  });
</script>